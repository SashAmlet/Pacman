def bresenham_line(x1, y1, x2, y2):
    """Функция для построения линии по алгоритму Брезенхэма между точками (x1, y1) и (x2, y2)."""
    points = []
    dx = abs(x2 - x1)
    dy = abs(y2 - y1)
    sx = 1 if x1 < x2 else -1
    sy = 1 if y1 < y2 else -1
    err = dx - dy
    
    while True:
        points.append((x1, y1))
        if x1 == x2 and y1 == y2:
            break
        e2 = 2 * err
        if e2 > -dy:
            err -= dy
            x1 += sx
        if e2 < dx:
            err += dx
            y1 += sy
    
    return points

def can_see(matrix, x1, y1, x2, y2):
    """Проверяет, можно ли увидеть объект на координатах (x1, y1) с позиции (x2, y2) в матрице."""
    line_of_sight = bresenham_line(x1, y1, x2, y2)
    
    for (x, y) in line_of_sight:
        # Проверяем, является ли клетка стеной
        if matrix[y][x] == 1:
            return False  # Видимость блокирована стеной
    
    return True  # Если нет стен на пути, объект виден

# Пример использования
matrix = [
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [1, 1, 1, 2, 2, 1, 2, 1, 3, 1, 2, 1, 2, 2, 2, 1, 3, 2, 0, 1],
    [1, 0, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 3, 1, 2, 1, 0, 1],
    [1, 0, 2, 1, 2, 2, 2, 1, 3, 2, 2, 1, 2, 2, 2, 2, 2, 2, 0, 1],
    [1, 0, 3, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 0, 1],
    [1, 0, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 0, 1],
    [1, 0, 1, 1, 3, 1, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 1, 0, 1],
    [1, 0, 3, 1, 2, 1, 2, 0, 1, 4, 4, 1, 0, 1, 2, 2, 2, 2, 0, 1],
    [1, 0, 2, 1, 2, 1, 2, 0, 1, 0, 0, 1, 0, 1, 2, 1, 2, 1, 0, 1],
    [1, 0, 3, 2, 3, 2, 2, 0, 1, 0, 0, 1, 0, 1, 2, 2, 2, 2, 0, 1],
    [1, 0, 1, 1, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 0, 1],
    [1, 0, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 0, 1],
    [1, 0, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1],
    [1, 0, 2, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 3, 2, 2, 0, 1],
    [1, 0, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 3, 1, 1, 1, 0, 1],
    [1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 0, 1],
    [1, 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 0, 1],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]

# Проверяем, можно ли увидеть объект на (8, 9) с позиции (1, 0)
print(can_see(matrix, 1, 3, 2, 1))  # False, так как есть стены
